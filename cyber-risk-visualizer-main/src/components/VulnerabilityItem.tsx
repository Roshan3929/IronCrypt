import React from 'react';
import { ExternalLink, FileDown } from 'lucide-react';
import { ProcessedVulnerability } from '../types/vulnerability';
import { Button } from './ui/button';

interface VulnerabilityItemProps {
  vulnerability: ProcessedVulnerability;
  onClick: () => void;
  onExport: (vulnerability: ProcessedVulnerability, reportType: 'executive_summary' | 'technical_report') => void;
}

const VulnerabilityItem: React.FC<VulnerabilityItemProps> = ({ vulnerability, onClick, onExport }) => {
  const getSeverityColor = (cvssScore) => {
    if (cvssScore >= 9.0) return 'bg-red-600';
    if (cvssScore >= 7.0) return 'bg-red-500';
    if (cvssScore >= 4.0) return 'bg-yellow-500';
    return 'bg-green-500';
  };

  const getSeverityText = (cvssScore) => {
    if (cvssScore >= 9.0) return 'Critical';
    if (cvssScore >= 7.0) return 'High';
    if (cvssScore >= 4.0) return 'Medium';
    return 'Low';
  };

  return (
    <tr 
      className="hover:bg-gray-50 cursor-pointer transition-colors"
      onClick={onClick}
    >
      <td className="px-6 py-4">
        <div className="flex items-center">
          <div className="w-8 h-8 bg-red-600 text-white rounded-full flex items-center justify-center font-bold text-sm">
            #{vulnerability.ranking}
          </div>
        </div>
      </td>
      
      <td className="px-6 py-4">
        <div className="flex items-center space-x-2">
          <span className="font-mono text-sm font-semibold text-gray-900">{vulnerability.cve_id}</span>
          <ExternalLink className="w-4 h-4 text-gray-400" />
        </div>
      </td>
      
      <td className="px-6 py-4">
        <div className="flex items-center space-x-2">
          <div className={`w-3 h-3 rounded-full ${getSeverityColor(vulnerability.cvss_score)}`}></div>
          <span className="text-sm font-medium text-gray-900">{getSeverityText(vulnerability.cvss_score)}</span>
        </div>
      </td>
      
      <td className="px-6 py-4">
        <span className="text-sm font-semibold text-gray-900">{vulnerability.cvss_score}</span>
        <span className="text-xs text-gray-500 ml-1">/ 10.0</span>
      </td>
      
      <td className="px-6 py-4">
        <span className="font-mono text-sm text-gray-900">{vulnerability.host_ip}</span>
      </td>
      
      <td className="px-6 py-4">
        <div>
          <div className="text-sm font-medium text-gray-900">{vulnerability.service_name}</div>
          <div className="text-xs text-gray-500">Port {vulnerability.port}</div>
        </div>
      </td>
      
      <td className="px-6 py-4">
        <div className="flex items-center justify-start space-x-2">
          <Button
            variant="outline"
            size="sm"
            onClick={(e) => {
              e.stopPropagation(); // Prevent row click
              onExport(vulnerability, 'executive_summary');
            }}
          >
            <FileDown className="w-4 h-4 mr-2" />
            Summary
          </Button>
          <Button
            variant="outline"
            size="sm"
            onClick={(e) => {
              e.stopPropagation(); // Prevent row click
              onExport(vulnerability, 'technical_report');
            }}
          >
            <FileDown className="w-4 h-4 mr-2" />
            Report
          </Button>
        </div>
      </td>
    </tr>
  );
};

export default VulnerabilityItem;
