import React, { useState } from 'react';
import VulnerabilityList from './VulnerabilityList';
import LoadingSpinner from './LoadingSpinner';
import { VulnerabilityData, ProcessedVulnerability } from '../types/vulnerability';

interface VulnerabilityDashboardProps {
  data: VulnerabilityData | null;
  loading: boolean;
}

const VulnerabilityDashboard: React.FC<VulnerabilityDashboardProps> = ({ data, loading }) => {
  const [selectedVulnerability, setSelectedVulnerability] = useState<ProcessedVulnerability | null>(null);

  if (loading) {
    return <LoadingSpinner />;
  }

  return (
    <div className="bg-gray-900">
      <div className="mx-auto">
        {/* Vulnerability List */}
        {data && (
          <VulnerabilityList 
            data={data} 
            onSelectVulnerability={setSelectedVulnerability}
            selectedVulnerability={selectedVulnerability}
          />
        )}
      </div>
    </div>
  );
};

export default VulnerabilityDashboard;
